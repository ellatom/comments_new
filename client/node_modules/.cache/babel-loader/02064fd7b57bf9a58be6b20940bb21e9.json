{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ellatom/Desktop/HTMLSENDBOX/NodeServer/SkillSet copy/comments/client/src/Components/Common/ManagePosts.js\";\nimport React from 'react';\nimport CommentsForm from './CommentsForm';\nimport SearchBar from '../Core/SearchBar';\nimport PostList from './PostList';\nimport '../../CSS/managepost.css';\nimport api from '../../Utils/api'; //controls all crud functionality \n\nclass ManageAPI extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n\n    this.componentDidMount = () => {\n      const db = JSON.parse(localStorage.getItem(\"EllaDatabase\") || \"[]\");\n      this.setState({\n        posts: db\n      });\n    };\n\n    this.savePost = async post => {\n      const db = JSON.parse(localStorage.getItem(\"EllaDatabase\") || \"[]\");\n      let foundImage = this.isLocalStorageUser(post.email);\n      let imageUser = await api.getData();\n      db.push({\n        email: post.email,\n        message: post.message,\n        image: foundImage === undefined ? imageUser.results[\"0\"].picture.medium : foundImage\n      });\n      localStorage.setItem(\"EllaDatabase\", JSON.stringify(db));\n      this.setState({\n        posts: db\n      });\n    };\n\n    this.isLocalStorageUser = emailPost => {\n      const db = JSON.parse(localStorage.getItem(\"EllaDatabase\") || \"[]\");\n      let emailFound = db.find(item => item.email.toLowerCase() === emailPost.toLowerCase());\n      if (emailFound === undefined) return undefined;\n      return emailFound.image;\n    };\n\n    this.searchWord = word => {\n      let filtered = JSON.parse(localStorage.getItem(\"EllaDatabase\") || \"[]\").filter(post => post.message.toLowerCase().includes(word.toLowerCase()));\n      this.setState({\n        posts: filtered\n      });\n    };\n  }\n\n  render() {\n    // \n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postPageContainer\",\n        children: [/*#__PURE__*/_jsxDEV(CommentsForm, {\n          savepost: this.savePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottomContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"searchbarContainer\",\n            children: /*#__PURE__*/_jsxDEV(SearchBar, {\n              searchWord: this.searchWord\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PostList, {\n            posts: this.state.posts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\n;\nexport default ManageAPI;","map":{"version":3,"sources":["/home/ellatom/Desktop/HTMLSENDBOX/NodeServer/SkillSet copy/comments/client/src/Components/Common/ManagePosts.js"],"names":["React","CommentsForm","SearchBar","PostList","api","ManageAPI","Component","state","posts","componentDidMount","db","JSON","parse","localStorage","getItem","setState","savePost","post","foundImage","isLocalStorageUser","email","imageUser","getData","push","message","image","undefined","results","picture","medium","setItem","stringify","emailPost","emailFound","find","item","toLowerCase","searchWord","word","filtered","filter","includes","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CommentsForm from './CommentsForm';\nimport SearchBar from '../Core/SearchBar';\nimport PostList from './PostList';\nimport '../../CSS/managepost.css';\nimport api from '../../Utils/api';\n\n//controls all crud functionality \nclass ManageAPI extends React.Component {\n\n    state = { posts: [] };\n\n    componentDidMount = () => {\n\n        const db =\n            JSON.parse(localStorage.getItem(\"EllaDatabase\") || \"[]\");\n\n        this.setState({ posts: db });\n    }\n\n    savePost = async (post) => {\n\n        const db =\n            JSON.parse(localStorage.getItem(\"EllaDatabase\") || \"[]\");\n\n        let foundImage = this.isLocalStorageUser(post.email);\n\n        let imageUser = await api.getData();\n\n        db.push({\n            email: post.email,\n            message: post.message,\n            image: foundImage === undefined ? imageUser.results[\"0\"].picture.medium : foundImage\n        });\n        \n        localStorage.setItem(\"EllaDatabase\", JSON.stringify(db));\n        this.setState({\n            posts: db\n        });\n    }\n\n    isLocalStorageUser = (emailPost) => {\n        \n        const db =\n            JSON.parse(localStorage.getItem(\"EllaDatabase\") || \"[]\");\n\n        let emailFound = db.find(item => item.email.toLowerCase() === emailPost.toLowerCase());\n        if(emailFound===undefined) return undefined;\n\n        return emailFound.image;\n    }\n\n    searchWord = (word) => {\n\n        let filtered =\n            JSON.parse(localStorage.getItem(\"EllaDatabase\") || \"[]\")\n                .filter(post =>\n                    post.message.toLowerCase().includes(word.toLowerCase()));\n\n        this.setState({ posts: filtered });\n    }\n\n    render() {\n        // \n        return (\n            <>\n                <div className=\"postPageContainer\">\n                    <CommentsForm\n                        savepost={this.savePost}>\n                    </CommentsForm>\n                    <div className=\"bottomContainer\">\n                        <div className=\"searchbarContainer\">\n                            <SearchBar searchWord={this.searchWord} />\n                        </div>\n                        <PostList\n                            posts={this.state.posts}>\n                        </PostList>\n                    </div>\n                </div>\n            </>\n        )\n    }\n};\n\nexport default ManageAPI;"]},"metadata":{},"sourceType":"module"}