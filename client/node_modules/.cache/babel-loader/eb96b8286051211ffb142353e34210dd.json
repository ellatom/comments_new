{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ellatom/Desktop/HTMLSENDBOX/NodeServer/SkillSet copy/comments/client/src/Components/Common/CommentsForm.js\";\nimport { TextArea, Button, Form } from \"semantic-ui-react\";\nimport '../../CSS/commentsform.css';\nimport validateData from '../../Utils/formvalidation';\nimport React from 'react';\n\nclass CommentsForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: [],\n      email: \"\",\n      message: \"\"\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        email,\n        message\n      } = this.state;\n      console.log(this.state);\n      let validationErrors = validateData(email, message);\n\n      if (validationErrors.length > 0) {\n        console.log(\"i am here\");\n        this.setState({\n          errors: validationErrors,\n          email: \"\",\n          message: \"\"\n        });\n      } else {\n        this.setState({\n          errors: []\n        });\n        this.props.savepost(this.state);\n        this.setState({\n          email: \"\",\n          message: \"\"\n        });\n      }\n\n      debugger;\n    };\n\n    this.renderErrors = () => {\n      return this.state.errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: error\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        id: \"myForm\",\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextArea, {\n            id: \"email\",\n            name: \"email\",\n            value: this.state.email,\n            onChange: this.handleChange,\n            rows: \"1\",\n            cols: \"50\",\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextArea, {\n            id: \"message\",\n            name: \"message\",\n            value: this.state.message,\n            onChange: this.handleChange,\n            rows: \"2\",\n            cols: \"50\",\n            placeholder: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btnForm\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btnForm\",\n            primary: true,\n            onClick: this.handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), this.state.errors.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui negative message\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.renderErrors()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default CommentsForm;","map":{"version":3,"sources":["/home/ellatom/Desktop/HTMLSENDBOX/NodeServer/SkillSet copy/comments/client/src/Components/Common/CommentsForm.js"],"names":["TextArea","Button","Form","validateData","React","CommentsForm","Component","state","errors","email","message","handleChange","event","name","value","target","setState","handleSubmit","preventDefault","console","log","validationErrors","length","props","savepost","renderErrors","map","error","index","render"],"mappings":"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","sourcesContent":["import { TextArea, Button, Form } from \"semantic-ui-react\";\nimport '../../CSS/commentsform.css';\nimport validateData from '../../Utils/formvalidation';\nimport React from 'react';\n\nclass CommentsForm extends React.Component {\n    state = { errors: [], email: \"\", message: \"\" };\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { email, message } = this.state;\n        console.log(this.state)\n\n        let validationErrors = validateData(email, message);\n\n        if (validationErrors.length > 0) {\n            console.log(\"i am here\")\n            this.setState({ errors: validationErrors,email: \"\", message: \"\"  });\n        }\n        else {\n            this.setState({ errors: [] });\n            this.props.savepost(this.state);\n            this.setState({ email: \"\", message: \"\"  });\n        }\n\n        debugger;\n    }\n\n    renderErrors = () => {\n        return this.state.errors.map((error, index) =>\n            <ul key={index}>\n                <li key={index}>{error}</li>\n            </ul>\n        )\n    }\n    render() {\n        return (\n            <div className=\"form\">\n                <Form id=\"myForm\" className=\"form\">\n                    <div>\n                        <TextArea\n                            id=\"email\"\n                            name=\"email\"\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                            rows=\"1\" cols=\"50\"\n                            placeholder=\"Email\">\n                        </TextArea>\n                    </div>\n                    <div>\n                        <TextArea\n                            id=\"message\"\n                            name=\"message\"\n                            value={this.state.message}\n                            onChange={this.handleChange}\n                            rows=\"2\" cols=\"50\"\n                            placeholder=\"Message\">\n                        </TextArea>\n                    </div>\n                    <div className=\"btnForm\">\n                        <Button className=\"btnForm\" primary onClick={this.handleSubmit}>\n                            Submit\n                        </Button>\n                    </div>\n                        {this.state.errors.length !== 0 ?\n                            <div className=\"ui negative message\">\n                                <div>{this.renderErrors()}</div>\n                            </div> : null}\n                </Form>\n            </div>\n        )\n    }\n};\nexport default CommentsForm;\n"]},"metadata":{},"sourceType":"module"}