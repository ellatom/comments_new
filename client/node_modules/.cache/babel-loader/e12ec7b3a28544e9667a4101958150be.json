{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ellatom/Desktop/HTMLSENDBOX/NodeServer/SkillSet copy/comments/client/src/Components/Common/ManagePosts.js\";\nimport React from 'react';\nimport CommentsForm from './CommentsForm';\nimport SearchBar from '../Core/SearchBar';\nimport PostList from './PostList';\nimport '../../CSS/managepost.css';\nimport api from '../../Utils/api'; //controls all crud functionality \n\nclass ManageAPI extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n\n    this.componentDidMount = () => {\n      const db = JSON.parse(localStorage.getItem(\"EllaDatabase\") || \"[]\");\n      this.setState({\n        posts: db\n      });\n    };\n\n    this.savePost = async post => {\n      const db = JSON.parse(localStorage.getItem(\"EllaDatabase\") || \"[]\");\n      let foundImage = this.isLocalStorageUser(post.email);\n\n      if (foundImage === undefined) {\n        let imageUser = await api.getData();\n        db.push({\n          email: post.email,\n          message: post.message,\n          image: imageUser.results[\"0\"].picture.medium\n        });\n        console.log(imageUser.results[\"0\"].picture.medium);\n      } else {\n        db.push({\n          email: post.email,\n          message: post.message,\n          image: foundImage\n        });\n      }\n\n      localStorage.setItem(\"EllaDatabase\", JSON.stringify(db));\n      this.setState({\n        posts: db\n      });\n    };\n\n    this.isLocalStorageUser = emailPost => {\n      const db = JSON.parse(localStorage.getItem(\"EllaDatabase\") || \"[]\");\n      let emailFound = db.find(item => item.email === emailPost);\n      if (emailFound === undefined) return undefined;\n      return emailFound.image;\n    };\n\n    this.searchWord = word => {\n      let filtered = JSON.parse(localStorage.getItem(\"EllaDatabase\") || \"[]\").filter(post => post.message.toLowerCase().includes(word.toLowerCase()));\n      this.setState({\n        posts: filtered\n      });\n    };\n  }\n\n  render() {\n    // \n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postPageContainer\",\n        children: [/*#__PURE__*/_jsxDEV(CommentsForm, {\n          savepost: this.savePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottomContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"searchbarContainer\",\n            children: /*#__PURE__*/_jsxDEV(SearchBar, {\n              searchWord: this.searchWord\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PostList, {\n            posts: this.state.posts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\n;\nexport default ManageAPI;","map":{"version":3,"sources":["/home/ellatom/Desktop/HTMLSENDBOX/NodeServer/SkillSet copy/comments/client/src/Components/Common/ManagePosts.js"],"names":["React","CommentsForm","SearchBar","PostList","api","ManageAPI","Component","state","posts","componentDidMount","db","JSON","parse","localStorage","getItem","setState","savePost","post","foundImage","isLocalStorageUser","email","undefined","imageUser","getData","push","message","image","results","picture","medium","console","log","setItem","stringify","emailPost","emailFound","find","item","searchWord","word","filtered","filter","toLowerCase","includes","render"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,0BAAP;AACA,OAAOC,GAAP,MAAgB,iBAAhB,C,CAEA;;AACA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAF4B;;AAAA,SAIpCC,iBAJoC,GAIhB,MAAM;AAEtB,YAAMC,EAAE,GACJC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,KAAwC,IAAnD,CADJ;AAGA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAEE;AAAT,OAAd;AACH,KAVmC;;AAAA,SAYpCM,QAZoC,GAYzB,MAAOC,IAAP,IAAgB;AAEvB,YAAMP,EAAE,GACJC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,KAAwC,IAAnD,CADJ;AAGA,UAAII,UAAU,GAAG,KAAKC,kBAAL,CAAwBF,IAAI,CAACG,KAA7B,CAAjB;;AAGA,UAAIF,UAAU,KAAKG,SAAnB,EAA8B;AAC1B,YAAIC,SAAS,GAAG,MAAMlB,GAAG,CAACmB,OAAJ,EAAtB;AAEAb,QAAAA,EAAE,CAACc,IAAH,CAAQ;AACJJ,UAAAA,KAAK,EAAEH,IAAI,CAACG,KADR;AAEJK,UAAAA,OAAO,EAAER,IAAI,CAACQ,OAFV;AAGJC,UAAAA,KAAK,EAAEJ,SAAS,CAACK,OAAV,CAAkB,GAAlB,EAAuBC,OAAvB,CAA+BC;AAHlC,SAAR;AAKAC,QAAAA,OAAO,CAACC,GAAR,CAAYT,SAAS,CAACK,OAAV,CAAkB,GAAlB,EAAuBC,OAAvB,CAA+BC,MAA3C;AACH,OATD,MAUK;AACDnB,QAAAA,EAAE,CAACc,IAAH,CAAQ;AACJJ,UAAAA,KAAK,EAAEH,IAAI,CAACG,KADR;AAEJK,UAAAA,OAAO,EAAER,IAAI,CAACQ,OAFV;AAGJC,UAAAA,KAAK,EAAER;AAHH,SAAR;AAKH;;AAEDL,MAAAA,YAAY,CAACmB,OAAb,CAAqB,cAArB,EAAqCrB,IAAI,CAACsB,SAAL,CAAevB,EAAf,CAArC;AACA,WAAKK,QAAL,CAAc;AACVP,QAAAA,KAAK,EAAEE;AADG,OAAd;AAGH,KA1CmC;;AAAA,SA4CpCS,kBA5CoC,GA4Cde,SAAD,IAAe;AAEhC,YAAMxB,EAAE,GACJC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,KAAwC,IAAnD,CADJ;AAGA,UAAIqB,UAAU,GAAGzB,EAAE,CAAC0B,IAAH,CAAQC,IAAI,IAAIA,IAAI,CAACjB,KAAL,KAAec,SAA/B,CAAjB;AACA,UAAGC,UAAU,KAAGd,SAAhB,EAA2B,OAAOA,SAAP;AAE3B,aAAOc,UAAU,CAACT,KAAlB;AACH,KArDmC;;AAAA,SAuDpCY,UAvDoC,GAuDtBC,IAAD,IAAU;AAEnB,UAAIC,QAAQ,GACR7B,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,KAAwC,IAAnD,EACK2B,MADL,CACYxB,IAAI,IACRA,IAAI,CAACQ,OAAL,CAAaiB,WAAb,GAA2BC,QAA3B,CAAoCJ,IAAI,CAACG,WAAL,EAApC,CAFR,CADJ;AAKA,WAAK3B,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAEgC;AAAT,OAAd;AACH,KA/DmC;AAAA;;AAiEpCI,EAAAA,MAAM,GAAG;AACL;AACA,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACI,QAAC,YAAD;AACI,UAAA,QAAQ,EAAE,KAAK5B;AADnB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,mCACI,QAAC,SAAD;AAAW,cAAA,UAAU,EAAE,KAAKsB;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,QAAD;AACI,YAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWC;AADtB;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAiBH;;AApFmC;;AAqFvC;AAED,eAAeH,SAAf","sourcesContent":["import React from 'react';\nimport CommentsForm from './CommentsForm';\nimport SearchBar from '../Core/SearchBar';\nimport PostList from './PostList';\nimport '../../CSS/managepost.css';\nimport api from '../../Utils/api';\n\n//controls all crud functionality \nclass ManageAPI extends React.Component {\n\n    state = { posts: [] };\n\n    componentDidMount = () => {\n\n        const db =\n            JSON.parse(localStorage.getItem(\"EllaDatabase\") || \"[]\");\n\n        this.setState({ posts: db });\n    }\n\n    savePost = async (post) => {\n\n        const db =\n            JSON.parse(localStorage.getItem(\"EllaDatabase\") || \"[]\");\n\n        let foundImage = this.isLocalStorageUser(post.email);\n\n        \n        if (foundImage === undefined) {\n            let imageUser = await api.getData();\n\n            db.push({\n                email: post.email,\n                message: post.message,\n                image: imageUser.results[\"0\"].picture.medium\n            });\n            console.log(imageUser.results[\"0\"].picture.medium);\n        }\n        else {\n            db.push({\n                email: post.email,\n                message: post.message,\n                image: foundImage\n            });\n        }\n\n        localStorage.setItem(\"EllaDatabase\", JSON.stringify(db));\n        this.setState({\n            posts: db\n        });\n    }\n\n    isLocalStorageUser = (emailPost) => {\n        \n        const db =\n            JSON.parse(localStorage.getItem(\"EllaDatabase\") || \"[]\");\n\n        let emailFound = db.find(item => item.email === emailPost);\n        if(emailFound===undefined) return undefined;\n\n        return emailFound.image;\n    }\n\n    searchWord = (word) => {\n\n        let filtered =\n            JSON.parse(localStorage.getItem(\"EllaDatabase\") || \"[]\")\n                .filter(post =>\n                    post.message.toLowerCase().includes(word.toLowerCase()));\n\n        this.setState({ posts: filtered });\n    }\n\n    render() {\n        // \n        return (\n            <>\n                <div className=\"postPageContainer\">\n                    <CommentsForm\n                        savepost={this.savePost}>\n                    </CommentsForm>\n                    <div className=\"bottomContainer\">\n                        <div className=\"searchbarContainer\">\n                            <SearchBar searchWord={this.searchWord} />\n                        </div>\n                        <PostList\n                            posts={this.state.posts}>\n                        </PostList>\n                    </div>\n                </div>\n            </>\n        )\n    }\n};\n\nexport default ManageAPI;"]},"metadata":{},"sourceType":"module"}